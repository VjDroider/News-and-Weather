/*
 *  Copyright (c) 2011 Daniel Huckaby
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.handlerexploit.news.adapters;

import java.util.Date;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.TextView;

import com.handlerexploit.news.R;
import com.handlerexploit.news.data.ArticlesProvider.Articles;
import com.handlerexploit.news.data.models.Article;
import com.handlerexploit.prime.widgets.RemoteImageView;

public class ArticleAdapter extends ArrayAdapter<Article> {

    public ArticleAdapter(Context context, Articles articles) {
        super(context, 0, articles);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        Article article = getItem(position);

        ViewHolder holder;
        if (convertView == null) {
            convertView = LayoutInflater.from(getContext()).inflate(R.layout.fragment_article_list_item, null);

            holder = new ViewHolder();
            holder.title = (TextView) convertView.findViewById(R.id.title);
            holder.source = (TextView) convertView.findViewById(R.id.source);
            holder.date = (TextView) convertView.findViewById(R.id.date);
            holder.thumbnail = (RemoteImageView) convertView.findViewById(R.id.thumbnail);

            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }

        holder.title.setText(article.getTitle());
        holder.source.setText(article.getSource());
        holder.date.setText(formatDate(article.getPublishDate()));
        holder.thumbnail.setImageBitmap(null);
        holder.thumbnail.setImageURL(article.getImageThumbnail());

        return convertView;
    }

    private static class ViewHolder {
        TextView title;
        TextView source;
        TextView date;
        RemoteImageView thumbnail;
    }

    public String formatDate(Date date) {

        // how much time since (ms)
        Long duration = System.currentTimeMillis() - date.getTime();

        int second = 1000;
        int minute = second * 60;
        int hour = minute * 60;
        int day = hour * 24;

        if (duration < second * 7) {
            return "Right now";
        }

        if (duration < minute) {
            int n = (int) Math.floor(duration / second);
            return n + " seconds ago";
        }

        if (duration < minute * 2) {
            return "About 1 minute ago";
        }

        if (duration < hour) {
            int n = (int) Math.floor(duration / minute);
            return n + " minutes ago";
        }

        if (duration < hour * 2) {
            return "About 1 hour ago";
        }

        if (duration < day) {
            int n = (int) Math.floor(duration / hour);
            return n + " hours ago";
        }
        if (duration > day && duration < day * 2) {
            return "Yesterday";
        }

        if (duration < day * 365) {
            int n = (int) Math.floor(duration / day);
            return n + " days ago";
        } else {
            return "Over a year ago";
        }
    }
}