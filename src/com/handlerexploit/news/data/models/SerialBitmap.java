/*
 *  Copyright (c) 2011 Daniel Huckaby
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.handlerexploit.news.data.models;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import android.graphics.Bitmap.Config;
import android.graphics.BitmapFactory;

@SuppressWarnings("serial")
public class SerialBitmap implements Serializable {
    
    private transient Bitmap bitmap;

    public SerialBitmap(Bitmap bitmap) {
        if (bitmap != null) {
            this.bitmap = bitmap.copy(Config.RGB_565, false);
        }
    }

    public Bitmap getBitmap() {
        return bitmap;
    }

    private void writeObject(ObjectOutputStream objectOutputStream) throws IOException {
        if (bitmap != null && objectOutputStream != null) {
            bitmap.compress(CompressFormat.JPEG, 100, objectOutputStream);
            bitmap = null;
        }
    }

    private void readObject(ObjectInputStream objectInputStream) throws IOException, ClassNotFoundException {
        if (objectInputStream != null) {
            bitmap = BitmapFactory.decodeStream(objectInputStream);
        }
    }
}