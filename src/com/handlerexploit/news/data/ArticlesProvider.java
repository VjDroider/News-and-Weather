/*
 *  Copyright (c) 2011 Daniel Huckaby
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.handlerexploit.news.data;

import java.net.URLEncoder;
import java.util.ArrayList;

import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.handlerexploit.news.data.models.Article;
import com.handlerexploit.news.utils.FileManager;

import android.content.Context;
import android.util.Log;

public class ArticlesProvider {
    
    private static final String TAG = ArticlesProvider.class.getSimpleName();
    private static final String ARTICLES_URL_TEMPLATE = "http://news.google.com/news?ned=us&topic=%s&output=rss";
    private static final String BASE_YQL_QUERY = "select title, link, description, pubDate from rss where url in ('%s') | sort(field=\"pubDate\", descending=\"true\") | truncate(count=10)";
    
    private static FileManager<Articles> mFileManager;
    
    public static void init(Context context) {
        mFileManager = new FileManager<Articles>(context);
        mFileManager.setGlobalTtl(5);
    }
    
    public static Articles getArticles(Section section) {
        Articles articles;
        if (mFileManager != null) {
            articles = (Articles) mFileManager.get(section.name());
            if (articles != null) {
                return articles;
            }
        }
        
        String jsonResponse = query(String.format(BASE_YQL_QUERY, String.format(ARTICLES_URL_TEMPLATE, section.key)));

        JSONArray items = null;
        try {
            items = new JSONObject(jsonResponse).getJSONArray("item");
        } catch (JSONException e) {
            e.printStackTrace();
        }
        
        articles = new Articles();
        
        if (items != null) {
            for (int i = 0; i < items.length(); i++) {
                try {
                    articles.add(new Article(items.getJSONObject(i)));
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        }
        
        if (mFileManager != null) {
            mFileManager.put(section.name(), articles);
        }
        
        return articles;
    }
    
    private static String query(String query) {
        try {
            String fullUrl = "http://query.yahooapis.com/v1/public/yql?format=json&q=" + URLEncoder.encode(query);
            String queryResponse = EntityUtils.toString(new DefaultHttpClient().execute(new HttpGet(fullUrl)).getEntity());
            return new JSONObject(queryResponse).getJSONObject("query").getJSONObject("results").toString();
        } catch (Throwable e) {
            Log.e(TAG, "An error occured while parsing yql query", e);
        }
        return null;
    }
    
    @SuppressWarnings("serial")
    public static class Articles extends ArrayList<Article> {
        // TODO
    }
    
    public static enum Section {
        
        TOP_STORIES("Top Stories", "h"),
        WORLD("World", "w"),
        US("U.S.", "n"),
        BUSINESS("Business", "b"),
        SCITECH("Sci/Tech", "t"),
        ENTERTAINMENT("Entertainment", "e"),
        SPORTS("Sports", "s"),
        HEALTH("Health", "m"),
        TECHNOLOGY("Technology", "tc"),
        SCIENCE("Science", "snc");
        
        public String label;
        public String key;
        
        Section(String label, String key) {
            this.label = label;
            this.key = key;
        }
    }
}